Pourquoi utiliser deux tokens ?
Cette approche, appelée système de jetons d'accès et de rafraîchissement, est considérée comme une bonne pratique en matière de sécurité pour plusieurs raisons :
Durée de vie courte pour l'access token :
Votre access token a une durée de vie de 15 minutes (comme on peut le voir dans l'attribut exp)
Cette courte durée limite les risques si le token est intercepté
Durée de vie longue pour le refresh token :
Votre refresh token dure environ 7 jours
Il permet de régénérer de nouveaux access tokens sans que l'utilisateur ait à se reconnecter
Séparation des responsabilités :
L'access token contient les informations d'identification (rôle "ADMIN")
Le refresh token ne contient que l'ID utilisateur, ce qui limite l'exposition des données sensibles
Avantages en termes de sécurité
Révocation d'accès : Si un token est compromis, vous pouvez invalider les refresh tokens sans déconnecter tous les utilisateurs
Moindre exposition : L'access token avec les droits d'administration circule moins longtemps
Compromis sécurité/expérience utilisateur : Sécurité renforcée sans obliger les utilisateurs à se reconnecter fréquemment
Comment cela fonctionne dans votre application
Lorsque vous vous connectez, le serveur génère ces deux tokens
L'access token est utilisé pour toutes les requêtes API
Quand l'access token expire (après 15 minutes), votre application utilise le refresh token pour en demander un nouveau
Ce processus continue tant que le refresh token est valide (7 jours)
Cette architecture suit les recommandations OWASP et les meilleures pratiques modernes en matière de sécurité des API.

// TODO
- Gestion des mails pour valider le compte ( Resend? )
- Voir pourquoi quand je like un livre, le coeur ne se rempli pas après un refresh
- ajouter des commentaires sur les livres
- formulaire pour l'ajout de tous sauf les livres
- ajouter des tests

RESPONSIVE