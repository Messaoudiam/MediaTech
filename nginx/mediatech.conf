# MediaTech - Production Nginx Configuration
# Domain: my-library.cloud
# Optimized for performance, security, and monitoring

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Cache zones
proxy_cache_path /var/cache/nginx/mediatech_cache levels=1:2 keys_zone=mediatech_cache:100m max_size=1g inactive=60m use_temp_path=off;

# Upstream definitions for load balancing
upstream mediatech_backend {
    least_conn;
    server mediatech-backend-prod:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream mediatech_frontend {
    least_conn;
    server mediatech-frontend-prod:80 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# Main server block - HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name my-library.cloud www.my-library.cloud;

    # Security headers for HTTP (before redirect)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Let's Encrypt ACME Challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name my-library.cloud www.my-library.cloud;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/my-library.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/my-library.cloud/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Remove server tokens
    server_tokens off;

    # Connection limits
    limit_conn conn_limit_per_ip 20;

    # Logs
    access_log /var/log/nginx/mediatech_access.log combined;
    error_log /var/log/nginx/mediatech_error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml;

    # API endpoints - Backend proxy with enhanced security
    location /api/ {
        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;
        
        # Special rate limiting for authentication endpoints
        location ~* /api/(auth|login|register) {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://mediatech_backend;
            include /etc/nginx/proxy_params;
        }

        # File upload endpoints with stricter limits
        location ~* /api/(upload|files) {
            limit_req zone=upload burst=3 nodelay;
            client_max_body_size 10M;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            proxy_pass http://mediatech_backend;
            include /etc/nginx/proxy_params;
        }

        # Default API proxy
        proxy_pass http://mediatech_backend;
        include /etc/nginx/proxy_params;

        # API-specific headers
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Handle WebSocket connections if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # CORS headers for API (if not handled by backend)
        # add_header Access-Control-Allow-Origin "https://my-library.cloud" always;
        # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        # add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        # add_header Access-Control-Allow-Credentials true always;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://mediatech_backend;
        include /etc/nginx/proxy_params;
    }

    # Metrics endpoint for monitoring (restricted access)
    location /metrics {
        allow 172.20.0.0/16;  # Docker network
        allow 127.0.0.1;      # Localhost
        deny all;
        
        access_log off;
        proxy_pass http://mediatech_backend;
        include /etc/nginx/proxy_params;
    }

    # Static files from backend (uploads, etc.)
    location /uploads/ {
        alias /opt/mediatech/data/uploads/;
        expires 1M;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Security for uploaded files
        location ~* \.(php|jsp|asp|sh|py|pl|rb)$ {
            deny all;
            return 404;
        }
    }

    # Frontend application - Single Page Application
    location / {
        proxy_pass http://mediatech_frontend;
        include /etc/nginx/proxy_params;

        # SPA fallback
        try_files $uri $uri/ @fallback;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            proxy_pass http://mediatech_frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable caching
            proxy_cache mediatech_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }

    # Fallback for SPA routing
    location @fallback {
        proxy_pass http://mediatech_frontend;
        include /etc/nginx/proxy_params;
    }

    # Security: Block access to sensitive files
    location ~* \.(env|log|ini|conf|bak|old|tmp|sql|backup)$ {
        deny all;
        return 404;
    }

    # Block access to hidden files and directories
    location ~ /\. {
        deny all;
        return 404;
    }

    # Block common exploit attempts
    location ~* /(wp-admin|wp-login|phpMyAdmin|phpmyadmin|admin|administrator) {
        deny all;
        return 404;
    }

    # Block XML-RPC and other WordPress-specific endpoints
    location ~* /xmlrpc\.php {
        deny all;
        return 404;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        internal;
        proxy_pass http://mediatech_frontend;
    }

    location = /50x.html {
        internal;
        proxy_pass http://mediatech_frontend;
    }
}

# Monitoring and status endpoints (internal access only)
server {
    listen 127.0.0.1:8080;
    server_name localhost;

    # Nginx status for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16;
        deny all;
    }

    # Health check endpoint
    location /nginx_health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}